<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="cd892513-a4cd-42ae-aa23-3e2c2b72f1a5" name="Default" comment="" />
    <ignored path="$PROJECT_DIR$/.tmp/" />
    <ignored path="$PROJECT_DIR$/temp/" />
    <ignored path="$PROJECT_DIR$/tmp/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>func</find>
    </findStrings>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/1-手写bind源码实现/1-手写bind源码实现.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/1-bind基本使用.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/3.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/apply的例子/4-手写bind源码实现-新函数当成构造函数来使用.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/apply的例子/apply.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/继承的分类/继承的分类" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/4-手写bind源码实现-新函数当成构造函数来使用.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/bind函数在MDN上是有实现的/bind函数在MDN上是有实现的" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/在react和vue中，bind函数式经常使用的/在react和vue中，bind函数式经常使用的" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/test.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/5-自写-修正自认为bug-手写bind源码实现-新函数当成构造函数来使用.html" />
        <option value="$USER_HOME$/Desktop/《手写bind函数和Promise源码实现》公开课/《手写bind函数和Promise源码实现》课件/8-自己实现promise源码.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/2-bind基本使用-新函数可以当做构造函数来使用.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/1-apply的例子/apply.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/3-手写bind源码实现-初步.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/4-完美版-手写bind源码实现-新函数当成构造函数来使用.html" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/2-bind函数在MDN上是有实现的/bind函数在MDN上是有实现的" />
        <option value="$PROJECT_DIR$/1-手写bind源码实现/4-在react和vue中，bind函数是经常使用的/在react和vue中，bind函数式经常使用的" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="-8" />
    <option name="y" value="-8" />
    <option name="width" value="1382" />
    <option name="height" value="744" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scratches" />
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="3-手写 bind 函数和 Promise 源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="3-手写 bind 函数和 Promise 源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="3-手写 bind 函数和 Promise 源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="3-手写 bind 函数和 Promise 源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="1-手写bind源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="3-手写 bind 函数和 Promise 源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="3-手写 bind 函数和 Promise 源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="1-手写bind源码实现" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="3-继承的分类" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="Settings.JavaScript" />
    <property name="nodejs_interpreter_path" value="C:/Program Files/nodejs/node" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="js.eslint.eslintPackage" value="C:\Users\lh\AppData\Roaming\npm\node_modules\eslint" />
    <property name="HbShouldOpenHtmlAsHb" value="" />
    <property name="DefaultHtmlFileTemplate" value="HTML File" />
    <property name="js-jscs-nodeInterpreter" value="C:\Program Files\nodejs\node.exe" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Vue-traval\===== 3-promise ======\3-手写 bind 函数和 Promise 源码实现\1-手写bind源码实现" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Vue-traval\===== 3-promise ======\3-手写 bind 函数和 Promise 源码实现\1-手写bind源码实现" />
      <recent name="D:\Vue-traval\===== 3-promise ======\3-手写 bind 函数和 Promise 源码实现\1-手写bind源码实现\继承的分类" />
      <recent name="D:\Vue-traval\===== 3-promise ======\3-手写 bind 函数和 Promise 源码实现\1-手写bind源码实现\apply的例子" />
    </key>
  </component>
  <component name="RunManager">
    <configuration default="true" type="DartCommandLineRunConfigurationType" factoryName="Dart Command Line Application">
      <method />
    </configuration>
    <configuration default="true" type="DartTestRunConfigurationType" factoryName="Dart Test">
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerKarma" factoryName="Karma">
      <config-file value="" />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerProtractor" factoryName="Protractor">
      <config-file value="" />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavascriptDebugType" factoryName="JavaScript Debug">
      <method />
    </configuration>
    <configuration default="true" type="NodeJSConfigurationType" factoryName="Node.js" path-to-node="project" working-dir="">
      <method />
    </configuration>
    <configuration default="true" type="cucumber.js" factoryName="Cucumber.js">
      <option name="cucumberJsArguments" value="" />
      <option name="executablePath" />
      <option name="filePath" />
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp" factoryName="Gulp.js">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.npm" factoryName="npm">
      <command value="run" />
      <scripts />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="mocha-javascript-test-runner" factoryName="Mocha">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <working-directory />
      <pass-parent-env>true</pass-parent-env>
      <envs />
      <ui />
      <extra-mocha-options />
      <test-kind>DIRECTORY</test-kind>
      <test-directory />
      <recursive>false</recursive>
      <method />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cd892513-a4cd-42ae-aa23-3e2c2b72f1a5" name="Default" comment="" />
      <created>1555403442389</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1555403442389</updated>
      <workItem from="1555403444763" duration="2350000" />
      <workItem from="1555412750954" duration="650000" />
      <workItem from="1555466084826" duration="26346000" />
      <workItem from="1555552082367" duration="12014000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="41360000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1382" height="744" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32440478" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.23529412" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="processedProjectFiles" value="true" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/test.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="324">
          <caret line="18" column="0" lean-forward="true" selection-start-line="18" selection-start-column="0" selection-end-line="18" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/4-完美版-手写bind源码实现-新函数当成构造函数来使用.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/《手写bind函数和Promise源码实现》公开课/《手写bind函数和Promise源码实现》课件/bind.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="504">
          <caret line="28" column="9" lean-forward="false" selection-start-line="28" selection-start-column="9" selection-end-line="28" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/2-bind基本使用-新函数可以当做构造函数来使用.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/《手写bind函数和Promise源码实现》公开课/《手写bind函数和Promise源码实现》课件/bind.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/1-手写bind源码实现.html" />
    <entry file="file://$USER_HOME$/Desktop/《手写bind函数和Promise源码实现》公开课/《手写bind函数和Promise源码实现》课件/bind.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="342">
          <caret line="28" column="9" lean-forward="false" selection-start-line="28" selection-start-column="9" selection-end-line="28" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/apply的例子/apply.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="414">
          <caret line="25" column="27" lean-forward="true" selection-start-line="25" selection-start-column="27" selection-end-line="25" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/在react和vue中，bind函数是经常使用的/在react和vue中，bind函数式经常使用的">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="24" lean-forward="true" selection-start-line="0" selection-start-column="24" selection-end-line="0" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/bind函数在MDN上是有实现的/bind函数在MDN上是有实现的">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="5" column="0" lean-forward="false" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/5-自写-修正自认为bug-手写bind源码实现-新函数当成构造函数来使用.html" />
    <entry file="file://$USER_HOME$/Desktop/《手写bind函数和Promise源码实现》公开课/《手写bind函数和Promise源码实现》课件/8-自己实现promise源码.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="162">
          <caret line="67" column="26" lean-forward="true" selection-start-line="67" selection-start-column="26" selection-end-line="67" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/test.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="142">
          <caret line="18" column="0" lean-forward="false" selection-start-line="18" selection-start-column="0" selection-end-line="18" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/继承的分类/继承的分类">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="18">
          <caret line="1" column="15" lean-forward="false" selection-start-line="1" selection-start-column="11" selection-end-line="1" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/1-bind基本使用.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="376">
          <caret line="29" column="0" lean-forward="false" selection-start-line="29" selection-start-column="0" selection-end-line="29" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/2-bind基本使用-新函数可以当做构造函数来使用.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="342">
          <caret line="19" column="26" lean-forward="true" selection-start-line="19" selection-start-column="26" selection-end-line="19" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/1-apply的例子/apply.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="72">
          <caret line="4" column="22" lean-forward="true" selection-start-line="4" selection-start-column="22" selection-end-line="4" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/3-手写bind源码实现-初步.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="126">
          <caret line="28" column="0" lean-forward="true" selection-start-line="28" selection-start-column="0" selection-end-line="28" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/4-在react和vue中，bind函数是经常使用的/在react和vue中，bind函数式经常使用的">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="18">
          <caret line="1" column="0" lean-forward="false" selection-start-line="1" selection-start-column="0" selection-end-line="1" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/2-bind函数在MDN上是有实现的/bind函数在MDN上是有实现的">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="54">
          <caret line="3" column="6" lean-forward="false" selection-start-line="3" selection-start-column="6" selection-end-line="3" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/3-继承的分类/继承的分类">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/1-手写bind源码实现/4-完美版-手写bind源码实现-新函数当成构造函数来使用.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-720">
          <caret line="17" column="6" lean-forward="true" selection-start-line="8" selection-start-column="4" selection-end-line="17" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>